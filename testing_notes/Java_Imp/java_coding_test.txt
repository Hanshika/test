
1.Write a program to find maximum number in array. 

2.Write a program to find 2 letter repeated patterns in string and their count?
eg: i/p - String input = "ababahjabaghjabiaba";
o/p:
5::ab
2::hj
2::ja
4::ba

1. Find Surpasser(greater element to its right) Count of each element in array
2. Find the square root of a given number
3. You are given an n x n 2D matrix representing an image.
    Rotate the image by 90 degrees (clockwise).
4. Convert String to Int without using Parsing.
1) write a program to print fibonacci numbers until n - where n is input?
eg: n=5
o/p: 0 1 1 2 3 
n=6
o/p: 0 1 1 2 3 5
2) Write a program to return index  in first array where you 
found complete second array , if not found return -1
eg:
{3,4,5,6,1}, {5,6}
o/p is 2 bcz at index 2 of first array i have second array
3) Write a program to return first duplicate character in string
4) write a program to implement Stack in java
1) Find leader elements from an array?
Element is said to be leader if all the elements to its right side 
are smaller than itself.
i/p : {6,9,15,1,11,3,10}
o/p : 15, 11, 10

2) Write a program to find whether a given number is perfect or not?

sum of all divisors of num= number
Ex - i/p - 6
1,2,3- 1+2+3 =6

o/p - This is a perfect number

3) Write a program to implement Arraylist? 
It should contain add(), get(), remove(), size() methods?



--------------------------------------------------------------------------------
QA
1. Find Surpasser(greater element to its right) Count of each element in array
2. Find the square root of a given number
3. You are given an n x n 2D matrix representing an image.
    Rotate the image by 90 degrees (clockwise).
4. Convert String to Int without using Parsing.

**********************
UI

1. Write a function that takes a sorted array and a value within the array and returns adjacent values as key, value pairs
Eg: [1, 4, 6, 7, 10, 15] && 1 -> [1, 4]

[1, 4, 6, 7, 10, 15] && 7 -> [6, 7][7, 10]

2. Given a binary array, find the maximum number of consecutive 1s in this array     Input: [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s.
    The maximum number of consecutive 1s is 3.

Note:
The input array will only contain 0 and 1.
The length of input array is a positive integer and will not exceed 10,000

3.Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O of n

Example 1:
Input: [3, 2, 1]
Output: 1
Explanation: The third maximum is 1.

Example 2:
Input: [1, 2]
Output: 2
Explanation: The third maximum does not exist, so the maximum (2) is returned instead.

Example 3:
Input: [2, 2, 3, 1]
Output: 1
Explanation: Note that the third maximum here means the third maximum distinct number.
Both numbers with value 2 are both considered as second maximum.QA
1. Find Surpasser(greater element to its right) Count of each element in array
2. Find the square root of a given number
3. You are given an n x n 2D matrix representing an image.
    Rotate the image by 90 degrees (clockwise).
4. Convert String to Int without using Parsing.

**********************
UI

1. Write a function that takes a sorted array and a value within the array and returns adjacent values as key, value pairs
Eg: [1, 4, 6, 7, 10, 15] && 1 -> [1, 4]

[1, 4, 6, 7, 10, 15] && 7 -> [6, 7][7, 10]

2. Given a binary array, find the maximum number of consecutive 1s in this array     Input: [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s.
    The maximum number of consecutive 1s is 3.

Note:
The input array will only contain 0 and 1.
The length of input array is a positive integer and will not exceed 10,000

3.Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O of n

Example 1:
Input: [3, 2, 1]
Output: 1
Explanation: The third maximum is 1.

Example 2:
Input: [1, 2]
Output: 2
Explanation: The third maximum does not exist, so the maximum (2) is returned instead.

Example 3:
Input: [2, 2, 3, 1]
Output: 1
Explanation: Note that the third maximum here means the third maximum distinct number.
Both numbers with value 2 are both considered as second maximum.
*********Qa*************

1) Find leader elements from an array?
Element is said to be leader if all the elements to its right side 
are smaller than itself.
i/p : {6,9,15,1,11,3,10}
o/p : 15, 11, 10

2) Write a program to find whether a given number is perfect or not?

sum of all divisors of num= number
Ex - i/p - 6
1,2,3- 1+2+3 =6

o/p - This is a perfect number

3) Write a program to implement Arraylist? 
It should contain add(), get(), remove(), size() methods?


**********UI*****************

Write a program to print Pascals traingle

Write a program for insertion sort

Given a string "sdfdsjgnfkgfdkmgfsdhsdbshdbaz" give an output like 
[[character, number of times repeated], [character, number of times repeated]] 
in a multi dimensional array in ascending order of count
Given a set of distinct integers, nums, return all possible subsets.
Note: The solution set must not contain duplicate subsets.
For example,
If nums = [1,2,3], a solution is:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]



Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.
For example, given the following triangle

[
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3]
]

The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).



Given a list of non negative integers, arrange them such that they form the largest number.
For example, given [3, 30, 34, 5, 9], the largest formed number is 9534330.
Note: The result may be very large, so you need to return a string instead of an integer.



1.Given a list of unique words, find all pairs of distinct indices (i, j) in the given list, so that the concatenation of the two words, i.e. words[i] + words[j] is a palindrome.
Example 1:
Given words = ["bat", "tab", "cat"]
Return [[0, 1], [1, 0]]
The palindromes are ["battab", "tabbat"]

Example 2:
Given words = ["abcd", "dcba", "lls", "s", "sssll"]
Return [[0, 1], [1, 0], [3, 2], [2, 4]]
The palindromes are ["dcbaabcd", "abcddcba", "slls", "llssssll"]


2.Given a string array words, find the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters. You may assume that each word will contain only lower case letters. If no such two words exist, return 0.
Example 1:

Given ["abcw", "baz", "foo", "bar", "xtfn", "abcdef"]
Return 16
The two words can be "abcw", "xtfn".
Example 2:

Given ["a", "ab", "abc", "d", "cd", "bcd", "abcd"]
Return 4
The two words can be "ab", "cd".
Example 3:

Given ["a", "aa", "aaa", "aaaa"]
Return 0
No such pair of words.

3.Given a int array and a number -- remove that number from the array and return the size of the array
input - {1,2,3,4,5,6,7,8,9,5,10}, number - 5
output - size of array - 9



















